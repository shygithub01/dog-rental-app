import React, { useState, useEffect } from 'react';
import { useFirebase } from '../../contexts/FirebaseContext';
import { collection, query, where, getDocs, orderBy } from 'firebase/firestore';
import PhotoCarousel from '../Common/PhotoCarousel';
import { useIsMobile } from '../../hooks/useIsMobile';

interface Dog {
  id: string;
  name: string;
  breed: string;
  age: number;
  size: 'small' | 'medium' | 'large';
  description: string;
  pricePerDay: number;
  location: string;
  imageUrl?: string;
  imageUrls?: string[];
  temperament?: string[];
  goodWith?: string[];
  activityLevel?: string;
  specialNotes?: string;
  isAvailable: boolean;
  status?: 'available' | 'requested' | 'rented';
  ownerId: string;
  ownerName: string;
  createdAt: any;
  updatedAt: any;
}

interface OwnerDogManagementProps {
  currentUserId: string;
  onEditDog: (dog: Dog) => void;
  onAddNewDog: () => void;
  onBack: () => void;
}

const OwnerDogManagement: React.FC<OwnerDogManagementProps> = ({
  currentUserId,
  onEditDog,
  onAddNewDog,
  onBack
}) => {
  const isMobile = useIsMobile();
  const [dogs, setDogs] = useState<Dog[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const { db } = useFirebase();

  useEffect(() => {
    loadOwnerDogs();
  }, [currentUserId]);

  const loadOwnerDogs = async () => {
    try {
      setLoading(true);
      const dogsQuery = query(
        collection(db, 'dogs'),
        where('ownerId', '==', currentUserId),
        orderBy('createdAt', 'desc')
      );
      
      const querySnapshot = await getDocs(dogsQuery);
      const dogsData = querySnapshot.docs.map(doc => ({
        id: doc.id,
        ...doc.data()
      })) as Dog[];
      
      setDogs(dogsData);
    } catch (error) {
      console.error('Error loading owner dogs:', error);
      setError('Failed to load your dogs');
    } finally {
      setLoading(false);
    }
  };

  const getStatusColor = (dog: Dog) => {
    if (!dog.isAvailable || dog.status === 'rented') return '#ef4444'; // Red
    if (dog.status === 'requested') return '#f59e0b'; // Orange
    return '#22c55e'; // Green
  };

  const getStatusText = (dog: Dog) => {
    if (!dog.isAvailable) return 'Unavailable';
    if (dog.status === 'rented') return 'Currently Rented';
    if (dog.status === 'requested') return 'Pending Request';
    return 'Available';
  };

  const getStatusIcon = (dog: Dog) => {
    if (!dog.isAvailable || dog.status === 'rented') return 'üîí';
    if (dog.status === 'requested') return '‚è≥';
    return '‚úÖ';
  };

  if (loading) {
    return (
      <div style={{ minHeight: '100vh', background: 'white' }}>
        {/* Header */}
        <header className="modern-header fade-in">
          <div className="header-content">
            <div style={{ display: 'flex', alignItems: 'center', gap: '32px' }}>
              <button
                onClick={onBack}
                style={{
                  padding: '12px 24px',
                  backgroundColor: '#FF6B35',
                  border: 'none',
                  borderRadius: '8px',
                  color: 'white',
                  fontSize: '1rem',
                  fontWeight: '700',
                  cursor: 'pointer',
                  transition: 'all 0.2s ease',
                  boxShadow: '0 2px 8px rgba(255, 107, 53, 0.3)'
                }}
              >
                {isMobile ? '‚Üê' : '‚Üê Back to Dashboard'}
              </button>
              <a href="#" className="logo">
                DogRental
              </a>
            </div>
          </div>
        </header>

        {/* Loading State */}
        <div style={{
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          minHeight: 'calc(100vh - 80px)',
          background: 'linear-gradient(135deg, rgba(255, 107, 53, 0.05) 0%, rgba(45, 212, 191, 0.05) 50%, rgba(253, 224, 71, 0.05) 100%)'
        }}>
          <div style={{ textAlign: 'center' }}>
            <div style={{ fontSize: '3rem', marginBottom: '20px' }}>üêï</div>
            <h2 style={{ color: '#2d3748', marginBottom: '10px' }}>Loading Your Dogs...</h2>
            <p style={{ color: '#6b7280' }}>Please wait while we fetch your furry friends</p>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div style={{ minHeight: '100vh', background: 'white' }}>
      {/* Header */}
      <header className="modern-header fade-in">
        <div className="header-content">
          <div style={{ display: 'flex', alignItems: 'center', gap: '32px' }}>
            <button
              onClick={onBack}
              style={{
                padding: '12px 24px',
                backgroundColor: '#FF6B35',
                border: 'none',
                borderRadius: '8px',
                color: 'white',
                fontSize: '1rem',
                fontWeight: '700',
                cursor: 'pointer',
                transition: 'all 0.2s ease',
                boxShadow: '0 2px 8px rgba(255, 107, 53, 0.3)'
              }}
              onMouseOver={(e) => {
                e.currentTarget.style.backgroundColor = '#FF8E53';
                e.currentTarget.style.transform = 'translateY(-1px)';
              }}
              onMouseOut={(e) => {
                e.currentTarget.style.backgroundColor = '#FF6B35';
                e.currentTarget.style.transform = 'translateY(0)';
              }}
            >
              {isMobile ? '‚Üê' : '‚Üê Back to Dashboard'}
            </button>
            <a href="#" className="logo">
              DogRental
            </a>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section className="hero-section">
        <div className="hero-content fade-in">
          <div className="hero-text">
            <h1 className="hero-title">
              Manage Your Dogs
            </h1>
            <p className="hero-subtitle">
              Edit your dog listings, manage availability, and track your rental success. Your furry friends are ready to make new memories!
            </p>
            
            <div className="hero-stats">
              <div className="hero-stat">
                <div className="hero-stat-number">{dogs.length}</div>
                <div className="hero-stat-label">Your Dogs</div>
              </div>
              <div className="hero-stat">
                <div className="hero-stat-number">{dogs.filter(d => d.isAvailable).length}</div>
                <div className="hero-stat-label">Available</div>
              </div>
              <div className="hero-stat">
                <div className="hero-stat-number">{dogs.filter(d => d.status === 'requested').length}</div>
                <div className="hero-stat-label">Pending Requests</div>
              </div>
            </div>
          </div>

          {/* Dogs Grid */}
          <div className="search-card slide-up" style={{ 
            minHeight: '600px',
            padding: isMobile ? '20px' : '40px'
          }}>
            <h3 className="search-title">
              Your Dog Listings
            </h3>
            <p className="search-subtitle">
              Click on any dog to edit their information, photos, and availability
            </p>

            {error && (
              <div style={{
                color: '#dc2626',
                marginBottom: '20px',
                padding: '15px',
                backgroundColor: '#fef2f2',
                borderRadius: '10px',
                border: '1px solid #fecaca',
                fontSize: '0.95rem'
              }}>
                ‚ö†Ô∏è {error}
              </div>
            )}

            {/* Dogs Grid */}
            <div style={{
              display: 'grid',
              gridTemplateColumns: isMobile ? '1fr' : 'repeat(auto-fill, minmax(320px, 1fr))',
              gap: '24px',
              marginTop: '30px'
            }}>
              {/* Existing Dogs */}
              {dogs.map((dog) => (
                <div
                  key={dog.id}
                  style={{
                    background: 'white',
                    borderRadius: '16px',
                    overflow: 'hidden',
                    boxShadow: '0 4px 12px rgba(0,0,0,0.1)',
                    border: '2px solid #f1f5f9',
                    transition: 'all 0.3s ease',
                    cursor: 'pointer'
                  }}
                  onMouseOver={(e) => {
                    e.currentTarget.style.transform = 'translateY(-4px)';
                    e.currentTarget.style.boxShadow = '0 8px 25px rgba(0,0,0,0.15)';
                    e.currentTarget.style.borderColor = '#FF6B35';
                  }}
                  onMouseOut={(e) => {
                    e.currentTarget.style.transform = 'translateY(0)';
                    e.currentTarget.style.boxShadow = '0 4px 12px rgba(0,0,0,0.1)';
                    e.currentTarget.style.borderColor = '#f1f5f9';
                  }}
                >
                  {/* Dog Image */}
                  <div style={{ height: '200px', position: 'relative' }}>
                    <PhotoCarousel
                      images={dog.imageUrls || (dog.imageUrl ? [dog.imageUrl] : [])}
                      dogName={dog.name}
                      height="200px"
                      showCounter={true}
                      showDots={false}
                    />
                    
                    {/* Status Badge */}
                    <div style={{
                      position: 'absolute',
                      top: '12px',
                      right: '12px',
                      backgroundColor: getStatusColor(dog),
                      color: 'white',
                      padding: '6px 12px',
                      borderRadius: '20px',
                      fontSize: '0.75rem',
                      fontWeight: '600',
                      display: 'flex',
                      alignItems: 'center',
                      gap: '4px',
                      boxShadow: '0 2px 8px rgba(0,0,0,0.2)'
                    }}>
                      {getStatusIcon(dog)} {getStatusText(dog)}
                    </div>
                  </div>

                  {/* Dog Info */}
                  <div style={{ padding: '20px' }}>
                    <div style={{
                      display: 'flex',
                      justifyContent: 'space-between',
                      alignItems: 'flex-start',
                      marginBottom: '12px'
                    }}>
                      <div>
                        <h3 style={{
                          fontSize: '1.25rem',
                          fontWeight: '700',
                          color: '#1f2937',
                          margin: '0 0 4px 0'
                        }}>
                          {dog.name}
                        </h3>
                        <p style={{
                          fontSize: '0.875rem',
                          color: '#6b7280',
                          margin: 0
                        }}>
                          {dog.breed} ‚Ä¢ {dog.age} years old
                        </p>
                      </div>
                      <div style={{
                        fontSize: '1.25rem',
                        fontWeight: '700',
                        color: '#059669'
                      }}>
                        ${dog.pricePerDay}/day
                      </div>
                    </div>

                    {/* Personality Tags */}
                    {dog.temperament && dog.temperament.length > 0 && (
                      <div style={{
                        display: 'flex',
                        flexWrap: 'wrap',
                        gap: '6px',
                        marginBottom: '16px'
                      }}>
                        {dog.temperament.slice(0, 3).map((trait, index) => (
                          <span
                            key={index}
                            style={{
                              backgroundColor: '#f0f9ff',
                              color: '#0c4a6e',
                              padding: '4px 8px',
                              borderRadius: '12px',
                              fontSize: '0.75rem',
                              fontWeight: '500'
                            }}
                          >
                            {trait}
                          </span>
                        ))}
                        {dog.temperament.length > 3 && (
                          <span style={{
                            color: '#6b7280',
                            fontSize: '0.75rem'
                          }}>
                            +{dog.temperament.length - 3} more
                          </span>
                        )}
                      </div>
                    )}

                    {/* Location */}
                    <div style={{
                      display: 'flex',
                      alignItems: 'center',
                      gap: '6px',
                      marginBottom: '16px',
                      color: '#6b7280',
                      fontSize: '0.875rem'
                    }}>
                      üìç {dog.location}
                    </div>

                    {/* Edit Button */}
                    <button
                      onClick={(e) => {
                        e.stopPropagation();
                        onEditDog(dog);
                      }}
                      style={{
                        width: '100%',
                        padding: '12px 20px',
                        backgroundColor: '#FF6B35',
                        color: 'white',
                        border: 'none',
                        borderRadius: '10px',
                        fontSize: '0.875rem',
                        fontWeight: '600',
                        cursor: 'pointer',
                        transition: 'all 0.2s ease'
                      }}
                      onMouseOver={(e) => {
                        e.currentTarget.style.backgroundColor = '#FF8E53';
                        e.currentTarget.style.transform = 'translateY(-1px)';
                      }}
                      onMouseOut={(e) => {
                        e.currentTarget.style.backgroundColor = '#FF6B35';
                        e.currentTarget.style.transform = 'translateY(0)';
                      }}
                    >
                      ‚úèÔ∏è Edit {dog.name}
                    </button>
                  </div>
                </div>
              ))}

              {/* Add New Dog Card */}
              <div
                onClick={onAddNewDog}
                style={{
                  background: 'linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%)',
                  borderRadius: '16px',
                  border: '3px dashed #cbd5e1',
                  display: 'flex',
                  flexDirection: 'column',
                  alignItems: 'center',
                  justifyContent: 'center',
                  minHeight: '320px',
                  cursor: 'pointer',
                  transition: 'all 0.3s ease'
                }}
                onMouseOver={(e) => {
                  e.currentTarget.style.borderColor = '#FF6B35';
                  e.currentTarget.style.background = 'linear-gradient(135deg, #fff7ed 0%, #fed7aa 100%)';
                  e.currentTarget.style.transform = 'translateY(-4px)';
                }}
                onMouseOut={(e) => {
                  e.currentTarget.style.borderColor = '#cbd5e1';
                  e.currentTarget.style.background = 'linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%)';
                  e.currentTarget.style.transform = 'translateY(0)';
                }}
              >
                <div style={{
                  fontSize: '4rem',
                  marginBottom: '16px',
                  opacity: 0.7
                }}>
                  üêï
                </div>
                <h3 style={{
                  fontSize: '1.25rem',
                  fontWeight: '700',
                  color: '#374151',
                  margin: '0 0 8px 0'
                }}>
                  Add New Dog
                </h3>
                <p style={{
                  fontSize: '0.875rem',
                  color: '#6b7280',
                  textAlign: 'center',
                  margin: 0,
                  maxWidth: '200px'
                }}>
                  List another furry friend and start earning more!
                </p>
                <div style={{
                  marginTop: '20px',
                  padding: '10px 20px',
                  backgroundColor: '#FF6B35',
                  color: 'white',
                  borderRadius: '8px',
                  fontSize: '0.875rem',
                  fontWeight: '600'
                }}>
                  + Add Dog
                </div>
              </div>
            </div>

            {/* Empty State */}
            {dogs.length === 0 && !loading && (
              <div style={{
                textAlign: 'center',
                padding: '60px 20px',
                color: '#6b7280'
              }}>
                <div style={{ fontSize: '4rem', marginBottom: '20px' }}>üêï</div>
                <h3 style={{
                  fontSize: '1.5rem',
                  fontWeight: '600',
                  color: '#374151',
                  margin: '0 0 12px 0'
                }}>
                  No Dogs Listed Yet
                </h3>
                <p style={{
                  fontSize: '1rem',
                  margin: '0 0 30px 0',
                  maxWidth: '400px',
                  marginLeft: 'auto',
                  marginRight: 'auto'
                }}>
                  Start earning by listing your first furry friend! It only takes a few minutes to create a listing.
                </p>
                <button
                  onClick={onAddNewDog}
                  style={{
                    padding: '15px 30px',
                    backgroundColor: '#FF6B35',
                    color: 'white',
                    border: 'none',
                    borderRadius: '10px',
                    fontSize: '1rem',
                    fontWeight: '600',
                    cursor: 'pointer',
                    transition: 'all 0.2s ease'
                  }}
                  onMouseOver={(e) => {
                    e.currentTarget.style.backgroundColor = '#FF8E53';
                    e.currentTarget.style.transform = 'translateY(-2px)';
                  }}
                  onMouseOut={(e) => {
                    e.currentTarget.style.backgroundColor = '#FF6B35';
                    e.currentTarget.style.transform = 'translateY(0)';
                  }}
                >
                  üêï List Your First Dog
                </button>
              </div>
            )}
          </div>
        </div>
      </section>
    </div>
  );
};

export default OwnerDogManagement;